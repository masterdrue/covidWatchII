{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountrySelector/CountrySelector.js","components/Navbar/Navbar.js","components/Footer/Footer.js","App.js","index.js","components/Navbar/Navbar.module.css","components/CountrySelector/CountrySelector.module.css","components/Footer/Footer.module.css","components/Chart/Chart.module.css","images/logo-250.png","images/cv19.png","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","dailySummary","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","dynamicUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","CountrySelector","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","FormControl","formControl","NativeSelect","customselect","defaultValue","onChange","e","target","i","key","Navbar","root","AppBar","appbar","position","Toolbar","IconButton","edge","menuButton","aria-label","image","alt","src","covidImage","Box","mx","ButtonGroup","Button","Footer","href","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b8f4c7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nimport styles from \"./Cards.module.css\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, dailySummary, lastUpdate } }) => {\n  if (!confirmed) {\n    return \"Please wait...\";\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Confirmed Cases\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Confirmed number of COVID-19 cases\n            </Typography>\n          </CardContent>\n        </Grid>\n        \n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Estimated Recoveries\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Reported number of COVID-19 Recoveries\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Total Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Total Deaths linked to COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  let dynamicUrl = url;\n\n  if (country) {\n    dynamicUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(dynamicUrl);\n\n    const modifiedData = {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate,\n    };\n\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries/`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport { fetchDailyData } from \"../../api\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths, lastUpdate }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Confirmed Cases\", \"Recovery Rate\", \"Total Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(25, 99, 174, 0.7)\",\n              \"rgba(30, 174, 25, 0.7)\",\n              \"rgba(171, 18, 26, 0.7)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Latest COVID-19 Statistics for ${country} as of ${new Date(lastUpdate).toDateString()} ` },\n      }}\n    />\n  ) : null;\n\n  const lineChart = dailyData[0] ? (\n    <Line \n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map((data) => data.confirmed),\n            label: \"Cases Confirmed\",\n            borderColor: \"#3333ff\",\n            backgroundColor: \"rgba(25, 99, 174, 0.7)\",\n            fill: true,\n          },\n          {\n            data: dailyData.map((data) => data.recovered),\n            label: \"Recovered\",\n            borderColor: \"green\",\n            backgroundColor: \"rgba(30, 174, 25, 0.7)\",\n            fill: true,\n          },\n          {\n            data: dailyData.map((data) => data.deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./CountrySelector.module.css\";\nimport { fetchCountries } from \"../../api\";\n\nconst CountrySelector = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <div>\n      <FormControl className={styles.formControl}>\n        <NativeSelect\n          className={styles.customselect}\n          defaultValue={\"\"}\n          onChange={(e) => handleCountryChange(e.target.value)}\n        >\n          <option value=\"\">Select Country</option>\n          {fetchedCountries.map((country, i) => (\n            <option key={i} value={country}>\n              {country}\n            </option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default CountrySelector;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport covidImage from \"../../images/logo-250.png\";\n\nimport styles from \"./Navbar.module.css\";\n\n\n\nconst Navbar = () => {\n  return (\n    <div className={styles.root}>\n      <AppBar className={styles.appbar} position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={styles.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          ></IconButton>\n          <Typography variant=\"h6\" className={styles.title}>\n            C\n            <span>\n              <img className={styles.image} alt=\"CovidWatch\" src={covidImage} />\n            </span>\n            VIDWATCH\n          </Typography>\n            <Box mx=\"auto\">\n              <ButtonGroup>\n                <Button variant=\"contained\" color=\"disabled\">Login</Button> \n                <Button variant=\"contained\" color=\"secondary\">Dashboard</Button>\n                <Button variant=\"contained\" color=\"disabled\">Signup</Button>\n              </ButtonGroup>\n            </Box>\n          </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport styles from \"./Footer.module.css\";\nimport covidImage from \"../../images/cv19.png\";\n\n\n\nconst Footer = () => {\n    return (\n       \n       \n        <div className=\"container\">\n            <div className=\"row\">\n                <div className={styles.container}>\n                    {<h1>\n                    C\n                    <span>\n                    <img className={styles.image} alt=\"covid19\" src={covidImage} />\n                    </span>\n                    VID WATCH\n                    </h1>}\n                </div>\n                <div>\n                    <ButtonGroup>\n                        <Button variant=\"contained\" color=\"secondary\"href=\"/\">Home</Button>\n                        <Button variant=\"contained\" color=\"disabled\" href=\"/charts\">Charts</Button>\n                        <Button variant=\"contained\" color=\"disabled\" href=\"/graphs\">Graphs</Button>\n                        <Button variant=\"contained\" color=\"disabled\" href=\"/summary\">Summary</Button>\n                        <Button variant=\"contained\" color=\"secondary\"  href=\"https://druescloud.com\" target=\"_blank\">DruesCloud.com</Button>\n                    </ButtonGroup>\n                </div>\n            </div>\n        </div>\n    \n    );\n}\n\nexport default Footer;","import React from \"react\";\nimport { Cards, Chart, CountrySelector, Navbar, Footer } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\n\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div>\n        <Navbar />\n        <div className={styles.container}>\n          <CountrySelector handleCountryChange={this.handleCountryChange} />\n          <Chart data={data} country={country} />\n          <Cards data={data} />\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Navbar_root__2XES1\",\"appbar\":\"Navbar_appbar__MoDCQ\",\"image\":\"Navbar_image__1uNsO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountrySelector_formControl__3MRUS\",\"options\":\"CountrySelector_options__1_Pea\",\"customselect\":\"CountrySelector_customselect__2ClHK\",\"list\":\"CountrySelector_list__mH7e-\",\"shake\":\"CountrySelector_shake__1x8ZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__st7Zp\",\"image\":\"Footer_image__3Xnq0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","module.exports = __webpack_public_path__ + \"static/media/logo-250.79f77b59.png\";","module.exports = __webpack_public_path__ + \"static/media/cv19.ad9e5ff1.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};"],"sourceRoot":""}